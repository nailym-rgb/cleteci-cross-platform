// Mocks generated by Mockito 5.4.6 from annotations
// in cleteci_cross_platform/test/ui/ocr/ocr_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:aws_textract_api/textract-2018-06-27.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAnalyzeDocumentResponse_0 extends _i1.SmartFake
    implements _i2.AnalyzeDocumentResponse {
  _FakeAnalyzeDocumentResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDetectDocumentTextResponse_1 extends _i1.SmartFake
    implements _i2.DetectDocumentTextResponse {
  _FakeDetectDocumentTextResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetDocumentAnalysisResponse_2 extends _i1.SmartFake
    implements _i2.GetDocumentAnalysisResponse {
  _FakeGetDocumentAnalysisResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetDocumentTextDetectionResponse_3 extends _i1.SmartFake
    implements _i2.GetDocumentTextDetectionResponse {
  _FakeGetDocumentTextDetectionResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeStartDocumentAnalysisResponse_4 extends _i1.SmartFake
    implements _i2.StartDocumentAnalysisResponse {
  _FakeStartDocumentAnalysisResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeStartDocumentTextDetectionResponse_5 extends _i1.SmartFake
    implements _i2.StartDocumentTextDetectionResponse {
  _FakeStartDocumentTextDetectionResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

/// A class which mocks [Textract].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextract extends _i1.Mock implements _i2.Textract {
  MockTextract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<_i2.AnalyzeDocumentResponse> analyzeDocument({
    required _i2.Document? document,
    required List<_i2.FeatureType>? featureTypes,
    _i2.HumanLoopConfig? humanLoopConfig,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeDocument, [], {
              #document: document,
              #featureTypes: featureTypes,
              #humanLoopConfig: humanLoopConfig,
            }),
            returnValue: _i3.Future<_i2.AnalyzeDocumentResponse>.value(
              _FakeAnalyzeDocumentResponse_0(
                this,
                Invocation.method(#analyzeDocument, [], {
                  #document: document,
                  #featureTypes: featureTypes,
                  #humanLoopConfig: humanLoopConfig,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AnalyzeDocumentResponse>);

  @override
  _i3.Future<_i2.DetectDocumentTextResponse> detectDocumentText({
    required _i2.Document? document,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#detectDocumentText, [], {#document: document}),
            returnValue: _i3.Future<_i2.DetectDocumentTextResponse>.value(
              _FakeDetectDocumentTextResponse_1(
                this,
                Invocation.method(#detectDocumentText, [], {
                  #document: document,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.DetectDocumentTextResponse>);

  @override
  _i3.Future<_i2.GetDocumentAnalysisResponse> getDocumentAnalysis({
    required String? jobId,
    int? maxResults,
    String? nextToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getDocumentAnalysis, [], {
              #jobId: jobId,
              #maxResults: maxResults,
              #nextToken: nextToken,
            }),
            returnValue: _i3.Future<_i2.GetDocumentAnalysisResponse>.value(
              _FakeGetDocumentAnalysisResponse_2(
                this,
                Invocation.method(#getDocumentAnalysis, [], {
                  #jobId: jobId,
                  #maxResults: maxResults,
                  #nextToken: nextToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.GetDocumentAnalysisResponse>);

  @override
  _i3.Future<_i2.GetDocumentTextDetectionResponse> getDocumentTextDetection({
    required String? jobId,
    int? maxResults,
    String? nextToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getDocumentTextDetection, [], {
              #jobId: jobId,
              #maxResults: maxResults,
              #nextToken: nextToken,
            }),
            returnValue: _i3.Future<_i2.GetDocumentTextDetectionResponse>.value(
              _FakeGetDocumentTextDetectionResponse_3(
                this,
                Invocation.method(#getDocumentTextDetection, [], {
                  #jobId: jobId,
                  #maxResults: maxResults,
                  #nextToken: nextToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.GetDocumentTextDetectionResponse>);

  @override
  _i3.Future<_i2.StartDocumentAnalysisResponse> startDocumentAnalysis({
    required _i2.DocumentLocation? documentLocation,
    required List<_i2.FeatureType>? featureTypes,
    String? clientRequestToken,
    String? jobTag,
    String? kMSKeyId,
    _i2.NotificationChannel? notificationChannel,
    _i2.OutputConfig? outputConfig,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startDocumentAnalysis, [], {
              #documentLocation: documentLocation,
              #featureTypes: featureTypes,
              #clientRequestToken: clientRequestToken,
              #jobTag: jobTag,
              #kMSKeyId: kMSKeyId,
              #notificationChannel: notificationChannel,
              #outputConfig: outputConfig,
            }),
            returnValue: _i3.Future<_i2.StartDocumentAnalysisResponse>.value(
              _FakeStartDocumentAnalysisResponse_4(
                this,
                Invocation.method(#startDocumentAnalysis, [], {
                  #documentLocation: documentLocation,
                  #featureTypes: featureTypes,
                  #clientRequestToken: clientRequestToken,
                  #jobTag: jobTag,
                  #kMSKeyId: kMSKeyId,
                  #notificationChannel: notificationChannel,
                  #outputConfig: outputConfig,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.StartDocumentAnalysisResponse>);

  @override
  _i3.Future<_i2.StartDocumentTextDetectionResponse>
  startDocumentTextDetection({
    required _i2.DocumentLocation? documentLocation,
    String? clientRequestToken,
    String? jobTag,
    String? kMSKeyId,
    _i2.NotificationChannel? notificationChannel,
    _i2.OutputConfig? outputConfig,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startDocumentTextDetection, [], {
              #documentLocation: documentLocation,
              #clientRequestToken: clientRequestToken,
              #jobTag: jobTag,
              #kMSKeyId: kMSKeyId,
              #notificationChannel: notificationChannel,
              #outputConfig: outputConfig,
            }),
            returnValue:
                _i3.Future<_i2.StartDocumentTextDetectionResponse>.value(
                  _FakeStartDocumentTextDetectionResponse_5(
                    this,
                    Invocation.method(#startDocumentTextDetection, [], {
                      #documentLocation: documentLocation,
                      #clientRequestToken: clientRequestToken,
                      #jobTag: jobTag,
                      #kMSKeyId: kMSKeyId,
                      #notificationChannel: notificationChannel,
                      #outputConfig: outputConfig,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i2.StartDocumentTextDetectionResponse>);
}
